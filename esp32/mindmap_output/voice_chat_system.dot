// 小智ESP32语音聊天系统流程图
digraph {
	rankdir=TB size="12,16"
	node [fontname=Arial shape=box style="rounded,filled"]
	edge [fontname=Arial]
	start [label="系统启动\nSystem Start" fillcolor="#E3F2FD"]
	hw_init [label="硬件初始化\nHardware Init\n• 显示器\n• 音频编解码器\n• 网络模块" fillcolor="#E3F2FD"]
	network_init [label="网络连接\nNetwork Connection\n• WiFi连接\n• 协议选择(MQTT/WebSocket)" fillcolor="#E3F2FD"]
	protocol_init [label="协议初始化\nProtocol Init\n• 设置回调函数\n• 启动服务" fillcolor="#E3F2FD"]
	idle [label="待机状态\nIdle State\n• 唤醒词检测开启\n• 音频处理停止\n• 显示待机界面" fillcolor="#F3E5F5"]
	connecting [label="连接中\nConnecting\n• 建立音频通道\n• 清除时间戳队列" fillcolor="#E8F5E8"]
	listening [label="监听状态\nListening\n• 音频处理开启\n• 语音活动检测\n• 实时编码发送" fillcolor="#E8F5E8"]
	speaking [label="播放状态\nSpeaking\n• 音频解码播放\n• 显示助手消息\n• 根据模式决定后续" fillcolor="#E8F5E8"]
	audio_input [label="音频输入\nAudio Input\n• 麦克风采集\n• 重采样(16kHz)\n• 双声道处理" fillcolor="#E0F2F1"]
	audio_process [label="音频处理\nAudio Processing\n• VAD检测\n• AEC处理\n• 噪声抑制" fillcolor="#E0F2F1"]
	opus_encode [label="Opus编码\nOpus Encoding\n• 音频压缩\n• 数据包生成\n• 队列管理" fillcolor="#E0F2F1"]
	audio_output [label="音频输出\nAudio Output\n• Opus解码\n• 重采样\n• 扬声器播放" fillcolor="#E0F2F1"]
	send_audio [label="发送音频\nSend Audio\n• 网络传输\n• 队列管理\n• 错误处理" fillcolor="#FFEBEE"]
	recv_audio [label="接收音频\nReceive Audio\n• 网络接收\n• 队列缓冲\n• 同步处理" fillcolor="#FFEBEE"]
	json_process [label="JSON消息处理\nJSON Processing\n• TTS控制\n• STT结果\n• LLM响应\n• 系统命令" fillcolor="#FFEBEE"]
	wake_word [label="唤醒词检测\nWake Word Detection\n• AFE/ESP引擎\n• 关键词识别\n• 音频缓冲" fillcolor="#FFF3E0"]
	button_press [label="按键触发\nButton Press\n• 手动激活\n• 状态切换\n• 中断处理" fillcolor="#FFF3E0"]
	vad_detect [label="语音活动检测\nVAD Detection\n• 语音检测\n• LED指示\n• 状态更新" fillcolor="#FFF3E0"]
	start -> hw_init [label="启动"]
	hw_init -> network_init [label="硬件就绪"]
	network_init -> protocol_init [label="网络连接"]
	protocol_init -> idle [label="初始化完成"]
	idle -> connecting [label="唤醒词检测\n或按键触发"]
	connecting -> listening [label="音频通道建立"]
	listening -> speaking [label="收到TTS开始"]
	speaking -> idle [label="播放完成\n(手动停止模式)"]
	speaking -> listening [label="播放完成\n(实时模式)"]
	audio_input -> audio_process [label="原始音频"]
	audio_process -> opus_encode [label="处理后音频"]
	opus_encode -> send_audio [label="编码数据"]
	recv_audio -> audio_output [label="网络音频"]
	wake_word -> connecting [label="唤醒检测" color=green]
	button_press -> connecting [label="手动触发" color=blue]
	vad_detect -> listening [label="语音活动" color=orange]
	json_process -> speaking [label="TTS消息"]
	json_process -> idle [label="系统命令"]
	main_loop [label="主事件循环\nMain Event Loop\n• 任务调度\n• 音频发送\n• 优先级管理" fillcolor="#F5F5F5"]
	audio_loop [label="音频循环\nAudio Loop\n• 音频输入输出\n• 实时处理\n• 独立任务" fillcolor="#F5F5F5"]
	background_task [label="后台任务\nBackground Task\n• 编解码处理\n• 网络通信\n• 异步执行" fillcolor="#F5F5F5"]
	tts_msg [label="TTS消息\nTTS Message\n• start: 开始播放\n• stop: 播放结束\n• sentence_start: 句子开始" fillcolor="#FFF3E0"]
	stt_msg [label="STT消息\nSTT Message\n• 语音识别结果\n• 用户输入显示\n• 日志记录" fillcolor="#FFF3E0"]
	llm_msg [label="LLM消息\nLLM Message\n• 情感状态\n• 表情设置\n• 交互反馈" fillcolor="#FFF3E0"]
	system_msg [label="系统消息\nSystem Message\n• 重启命令\n• 状态控制\n• 设备管理" fillcolor="#FFF3E0"]
	error_handle [label="错误处理\nError Handling\n• 网络错误\n• 音频错误\n• 状态恢复" fillcolor="#FFCDD2"]
	alert_msg [label="警报消息\nAlert Message\n• 错误提示\n• 状态通知\n• 用户反馈" fillcolor="#FFCDD2"]
	aec_process [label="AEC处理\nAEC Processing\n• 设备端AEC\n• 服务端AEC\n• 回声消除关闭" fillcolor="#E0F2F1"]
	protocol_init -> main_loop [label="启动主循环" style=dashed]
	protocol_init -> audio_loop [label="启动音频循环" style=dashed]
	protocol_init -> background_task [label="启动后台任务" style=dashed]
	json_process -> tts_msg [label="TTS类型"]
	json_process -> stt_msg [label="STT类型"]
	json_process -> llm_msg [label="LLM类型"]
	json_process -> system_msg [label="系统类型"]
	send_audio -> error_handle [label="发送失败" color=red]
	recv_audio -> error_handle [label="接收失败" color=red]
	error_handle -> alert_msg [label="错误通知"]
	alert_msg -> idle [label="恢复待机"]
	audio_process -> aec_process [label="回声消除"]
	aec_process -> opus_encode [label="处理完成"]
	dpi=300
	bgcolor=white
}
